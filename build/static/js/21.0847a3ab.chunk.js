(this["webpackJsonpfront-end"]=this["webpackJsonpfront-end"]||[]).push([[21],{1328:function(e,t,n){"use strict";n.r(t),n.d(t,"WalletLinkConnector",(function(){return c}));var r=n(152);function o(){return o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o.apply(this,arguments)}function i(e,t){return i=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},i(e,t)}function a(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}var c=function(e){var t,r;function c(t){var n,r=t.url,o=t.appName,i=t.appLogoUrl,c=t.darkMode,h=t.supportedChainIds;return(n=e.call(this,{supportedChainIds:h})||this).url=r,n.appName=o,n.appLogoUrl=i,n.darkMode=c||!1,n.handleChainChanged=n.handleChainChanged.bind(a(n)),n.handleAccountsChanged=n.handleAccountsChanged.bind(a(n)),n}r=e,(t=c).prototype=Object.create(r.prototype),t.prototype.constructor=t,i(t,r);var h=c.prototype;return h.activate=function(){try{var e=this,t=function(){return Promise.resolve(e.provider.request({method:"eth_requestAccounts"})).then((function(t){var n=t[0];return e.provider.on("chainChanged",e.handleChainChanged),e.provider.on("accountsChanged",e.handleAccountsChanged),{provider:e.provider,account:n}}))},r=function(){if(window.ethereum&&!0===window.ethereum.isCoinbaseWallet)e.provider=window.ethereum;else{var t=function(){if(!e.walletLink)return Promise.resolve(Promise.all([n.e(0),n.e(3),n.e(8),n.e(15)]).then(n.t.bind(null,1276,7)).then((function(e){var t;return null!=(t=null==e?void 0:e.default)?t:e}))).then((function(t){e.walletLink=new t(o({appName:e.appName,darkMode:e.darkMode},e.appLogoUrl?{appLogoUrl:e.appLogoUrl}:{})),e.provider=e.walletLink.makeWeb3Provider(e.url,1)}))}();if(t&&t.then)return t.then((function(){}))}}();return Promise.resolve(r&&r.then?r.then(t):t())}catch(i){return Promise.reject(i)}},h.getProvider=function(){try{return Promise.resolve(this.provider)}catch(e){return Promise.reject(e)}},h.getChainId=function(){try{return Promise.resolve(this.provider.chainId)}catch(e){return Promise.reject(e)}},h.getAccount=function(){try{return Promise.resolve(this.provider.request({method:"eth_requestAccounts"})).then((function(e){return e[0]}))}catch(e){return Promise.reject(e)}},h.deactivate=function(){this.provider.removeListener("chainChanged",this.handleChainChanged),this.provider.removeListener("accountsChanged",this.handleAccountsChanged)},h.close=function(){try{return this.provider.close(),this.emitDeactivate(),Promise.resolve()}catch(e){return Promise.reject(e)}},h.handleChainChanged=function(e){this.emitUpdate({chainId:e})},h.handleAccountsChanged=function(e){this.emitUpdate({account:e[0]})},c}(r.a)}}]);
//# sourceMappingURL=21.0847a3ab.chunk.js.map