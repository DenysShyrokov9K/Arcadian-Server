{"version":3,"sources":["../node_modules/assert/assert.js","../../src/index.ts","secp256k1.ts","../node_modules/json-stable-stringify/index.js","keccak.ts","../node_modules/secp256k1/elliptic.js","../node_modules/is-hex-prefixed/src/index.js","../node_modules/strip-hex-prefix/src/index.js","hash-utils.ts","../node_modules/secp256k1/lib/index.js","../node_modules/secp256k1/lib/elliptic.js","random.ts","../node_modules/jsonify/index.js","../node_modules/jsonify/lib/parse.js","../node_modules/jsonify/lib/stringify.js"],"names":["objectAssign","require","compare","a","b","x","length","y","i","len","Math","min","isBuffer","global","Buffer","_isBuffer","util","hasOwn","Object","prototype","hasOwnProperty","pSlice","Array","slice","functionsHaveNames","name","pToString","obj","toString","call","isView","arrbuf","ArrayBuffer","DataView","buffer","assert","module","exports","ok","regex","getName","func","isFunction","match","truncate","s","n","inspect","something","rawname","fail","actual","expected","message","operator","stackStartFunction","AssertionError","value","_deepEqual","strict","memos","isDate","getTime","isRegExp","source","multiline","lastIndex","ignoreCase","Float32Array","Float64Array","Uint8Array","actualIndex","indexOf","push","actualVisitedObjects","undefined","isPrimitive","getPrototypeOf","aIsArgs","isArguments","bIsArgs","key","ka","objectKeys","kb","sort","objEquiv","object","expectedException","test","e","Error","isPrototypeOf","_throws","shouldThrow","block","TypeError","error","_tryBlock","userProvidedMessage","isUnexpectedException","isError","options","self","this","generatedMessage","captureStackTrace","err","stack","out","fn_name","idx","next_line","substring","inherits","equal","notEqual","deepEqual","deepStrictEqual","notDeepEqual","notDeepStrictEqual","strictEqual","notStrictEqual","throws","doesNotThrow","ifError","keys","v","json","JSON","opts","cmp","space","join","f","cycles","replacer","node","aobj","bobj","seen","stringify","parent","level","indent","colonSeparator","toJSON","isArray","item","keyValue","splice","has","str","isHexPrefixed","errors","cond","msg","isUint8Array","numbers","includes","isCompressed","toTypeString","getAssertedOutput","output","secp256k1","contextRandomize","seed","privateKeyVerify","seckey","privateKeyNegate","privateKeyTweakAdd","tweak","privateKeyTweakMul","publicKeyVerify","pubkey","publicKeyCreate","compressed","publicKeyConvert","publicKeyNegate","publicKeyCombine","pubkeys","publicKeyTweakAdd","publicKeyTweakMul","signatureNormalize","sig","signatureExport","outputlen","signatureImport","ecdsaSign","msg32","data","noncefn","signature","recid","ecdsaVerify","ecdsaRecover","ecdh","hashfn","xbuf","ybuf","ec","EC","ecparams","curve","BN","constructor","loadPublicKey","first","p","toRed","red","redSqr","redIMul","redIAdd","redSqrt","isOdd","redNeg","keyPair","pub","loadCompressedPublicKey","subarray","x3","redISub","isZero","loadUncompressedPublicKey","savePublicKey","point","encode","bn","negate","sub","umod","toArrayLike","set","iadd","isub","tweaked","imul","keyFromPrivate","getPublic","pair","pairs","add","isInfinity","g","mul","r","nh","sigR","sigS","lenR","posR","lenS","posS","_noncefn","counter","nonce","d","sign","canonical","k","pers","recoveryParam","sigObj","sigr","sigs","verify","recoverPubKey","scalar","sha256","hash","update","digest","getX","toArray","getY","parse","at","ch","text","escapee","t","m","next","c","charAt","number","string","isFinite","hex","uffff","parseInt","String","fromCharCode","white","array","word","reviver","result","walk","holder","gap","rep","escapable","meta","quote","replace","charCodeAt","partial","mind","apply"],"mappings":"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","file":"static/js/1.d26cd3b1.chunk.js","sourcesContent":["'use strict';\n\nvar objectAssign = require('object-assign');\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n  return !!(b != null && b._isBuffer);\n}\n\n// based on node assert, original notice:\n// NB: The URL to the CommonJS spec is kept just for tradition.\n//     node-assert has evolved a lot since then, both in API and behavior.\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util = require('util/');\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\nvar functionsHaveNames = (function () {\n  return function foo() {}.name === 'foo';\n}());\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function(err) { if (err) throw err; };\n\n// Expose a strict only variant of assert\nfunction strict(value, message) {\n  if (!value) fail(value, true, message, '==', strict);\n}\nassert.strict = objectAssign(strict, assert, {\n  equal: assert.strictEqual,\n  deepEqual: assert.deepStrictEqual,\n  notEqual: assert.notStrictEqual,\n  notDeepEqual: assert.notDeepStrictEqual\n});\nassert.strict.strict = assert.strict;\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getLength = exports.decode = exports.encode = void 0;\nvar bn_js_1 = __importDefault(require(\"bn.js\"));\n/**\n * RLP Encoding based on: https://github.com/ethereum/wiki/wiki/%5BEnglish%5D-RLP\n * This function takes in a data, convert it to buffer if not, and a length for recursion\n * @param input - will be converted to buffer\n * @returns returns buffer of encoded data\n **/\nfunction encode(input) {\n    if (Array.isArray(input)) {\n        var output = [];\n        for (var i = 0; i < input.length; i++) {\n            output.push(encode(input[i]));\n        }\n        var buf = Buffer.concat(output);\n        return Buffer.concat([encodeLength(buf.length, 192), buf]);\n    }\n    else {\n        var inputBuf = toBuffer(input);\n        return inputBuf.length === 1 && inputBuf[0] < 128\n            ? inputBuf\n            : Buffer.concat([encodeLength(inputBuf.length, 128), inputBuf]);\n    }\n}\nexports.encode = encode;\n/**\n * Parse integers. Check if there is no leading zeros\n * @param v The value to parse\n * @param base The base to parse the integer into\n */\nfunction safeParseInt(v, base) {\n    if (v[0] === '0' && v[1] === '0') {\n        throw new Error('invalid RLP: extra zeros');\n    }\n    return parseInt(v, base);\n}\nfunction encodeLength(len, offset) {\n    if (len < 56) {\n        return Buffer.from([len + offset]);\n    }\n    else {\n        var hexLength = intToHex(len);\n        var lLength = hexLength.length / 2;\n        var firstByte = intToHex(offset + 55 + lLength);\n        return Buffer.from(firstByte + hexLength, 'hex');\n    }\n}\nfunction decode(input, stream) {\n    if (stream === void 0) { stream = false; }\n    if (!input || input.length === 0) {\n        return Buffer.from([]);\n    }\n    var inputBuffer = toBuffer(input);\n    var decoded = _decode(inputBuffer);\n    if (stream) {\n        return decoded;\n    }\n    if (decoded.remainder.length !== 0) {\n        throw new Error('invalid remainder');\n    }\n    return decoded.data;\n}\nexports.decode = decode;\n/**\n * Get the length of the RLP input\n * @param input\n * @returns The length of the input or an empty Buffer if no input\n */\nfunction getLength(input) {\n    if (!input || input.length === 0) {\n        return Buffer.from([]);\n    }\n    var inputBuffer = toBuffer(input);\n    var firstByte = inputBuffer[0];\n    if (firstByte <= 0x7f) {\n        return inputBuffer.length;\n    }\n    else if (firstByte <= 0xb7) {\n        return firstByte - 0x7f;\n    }\n    else if (firstByte <= 0xbf) {\n        return firstByte - 0xb6;\n    }\n    else if (firstByte <= 0xf7) {\n        // a list between  0-55 bytes long\n        return firstByte - 0xbf;\n    }\n    else {\n        // a list  over 55 bytes long\n        var llength = firstByte - 0xf6;\n        var length_1 = safeParseInt(inputBuffer.slice(1, llength).toString('hex'), 16);\n        return llength + length_1;\n    }\n}\nexports.getLength = getLength;\n/** Decode an input with RLP */\nfunction _decode(input) {\n    var length, llength, data, innerRemainder, d;\n    var decoded = [];\n    var firstByte = input[0];\n    if (firstByte <= 0x7f) {\n        // a single byte whose value is in the [0x00, 0x7f] range, that byte is its own RLP encoding.\n        return {\n            data: input.slice(0, 1),\n            remainder: input.slice(1),\n        };\n    }\n    else if (firstByte <= 0xb7) {\n        // string is 0-55 bytes long. A single byte with value 0x80 plus the length of the string followed by the string\n        // The range of the first byte is [0x80, 0xb7]\n        length = firstByte - 0x7f;\n        // set 0x80 null to 0\n        if (firstByte === 0x80) {\n            data = Buffer.from([]);\n        }\n        else {\n            data = input.slice(1, length);\n        }\n        if (length === 2 && data[0] < 0x80) {\n            throw new Error('invalid rlp encoding: byte must be less 0x80');\n        }\n        return {\n            data: data,\n            remainder: input.slice(length),\n        };\n    }\n    else if (firstByte <= 0xbf) {\n        // string is greater than 55 bytes long. A single byte with the value (0xb7 plus the length of the length),\n        // followed by the length, followed by the string\n        llength = firstByte - 0xb6;\n        if (input.length - 1 < llength) {\n            throw new Error('invalid RLP: not enough bytes for string length');\n        }\n        length = safeParseInt(input.slice(1, llength).toString('hex'), 16);\n        if (length <= 55) {\n            throw new Error('invalid RLP: expected string length to be greater than 55');\n        }\n        data = input.slice(llength, length + llength);\n        if (data.length < length) {\n            throw new Error('invalid RLP: not enough bytes for string');\n        }\n        return {\n            data: data,\n            remainder: input.slice(length + llength),\n        };\n    }\n    else if (firstByte <= 0xf7) {\n        // a list between  0-55 bytes long\n        length = firstByte - 0xbf;\n        innerRemainder = input.slice(1, length);\n        while (innerRemainder.length) {\n            d = _decode(innerRemainder);\n            decoded.push(d.data);\n            innerRemainder = d.remainder;\n        }\n        return {\n            data: decoded,\n            remainder: input.slice(length),\n        };\n    }\n    else {\n        // a list  over 55 bytes long\n        llength = firstByte - 0xf6;\n        length = safeParseInt(input.slice(1, llength).toString('hex'), 16);\n        var totalLength = llength + length;\n        if (totalLength > input.length) {\n            throw new Error('invalid rlp: total length is larger than the data');\n        }\n        innerRemainder = input.slice(llength, totalLength);\n        if (innerRemainder.length === 0) {\n            throw new Error('invalid rlp, List has a invalid length');\n        }\n        while (innerRemainder.length) {\n            d = _decode(innerRemainder);\n            decoded.push(d.data);\n            innerRemainder = d.remainder;\n        }\n        return {\n            data: decoded,\n            remainder: input.slice(totalLength),\n        };\n    }\n}\n/** Check if a string is prefixed by 0x */\nfunction isHexPrefixed(str) {\n    return str.slice(0, 2) === '0x';\n}\n/** Removes 0x from a given String */\nfunction stripHexPrefix(str) {\n    if (typeof str !== 'string') {\n        return str;\n    }\n    return isHexPrefixed(str) ? str.slice(2) : str;\n}\n/** Transform an integer into its hexadecimal value */\nfunction intToHex(integer) {\n    if (integer < 0) {\n        throw new Error('Invalid integer as argument, must be unsigned!');\n    }\n    var hex = integer.toString(16);\n    return hex.length % 2 ? \"0\" + hex : hex;\n}\n/** Pad a string to be even */\nfunction padToEven(a) {\n    return a.length % 2 ? \"0\" + a : a;\n}\n/** Transform an integer into a Buffer */\nfunction intToBuffer(integer) {\n    var hex = intToHex(integer);\n    return Buffer.from(hex, 'hex');\n}\n/** Transform anything into a Buffer */\nfunction toBuffer(v) {\n    if (!Buffer.isBuffer(v)) {\n        if (typeof v === 'string') {\n            if (isHexPrefixed(v)) {\n                return Buffer.from(padToEven(stripHexPrefix(v)), 'hex');\n            }\n            else {\n                return Buffer.from(v);\n            }\n        }\n        else if (typeof v === 'number' || typeof v === 'bigint') {\n            if (!v) {\n                return Buffer.from([]);\n            }\n            else {\n                return intToBuffer(v);\n            }\n        }\n        else if (v === null || v === undefined) {\n            return Buffer.from([]);\n        }\n        else if (v instanceof Uint8Array) {\n            return Buffer.from(v);\n        }\n        else if (bn_js_1.default.isBN(v)) {\n            // converts a BN to a Buffer\n            return Buffer.from(v.toArray());\n        }\n        else {\n            throw new Error('invalid type');\n        }\n    }\n    return v;\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar secp256k1_1 = require(\"secp256k1\");\nvar random_1 = require(\"./random\");\nvar SECP256K1_PRIVATE_KEY_SIZE = 32;\nfunction createPrivateKey() {\n    return __awaiter(this, void 0, void 0, function () {\n        var pk;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!true) return [3 /*break*/, 2];\n                    return [4 /*yield*/, random_1.getRandomBytes(SECP256K1_PRIVATE_KEY_SIZE)];\n                case 1:\n                    pk = _a.sent();\n                    if (secp256k1_1.privateKeyVerify(pk)) {\n                        return [2 /*return*/, pk];\n                    }\n                    return [3 /*break*/, 0];\n                case 2: return [2 /*return*/];\n            }\n        });\n    });\n}\nexports.createPrivateKey = createPrivateKey;\nfunction createPrivateKeySync() {\n    while (true) {\n        var pk = random_1.getRandomBytesSync(SECP256K1_PRIVATE_KEY_SIZE);\n        if (secp256k1_1.privateKeyVerify(pk)) {\n            return pk;\n        }\n    }\n}\nexports.createPrivateKeySync = createPrivateKeySync;\n__export(require(\"secp256k1\"));\n//# sourceMappingURL=secp256k1.js.map","var json = typeof JSON !== 'undefined' ? JSON : require('jsonify');\n\nmodule.exports = function (obj, opts) {\n    if (!opts) opts = {};\n    if (typeof opts === 'function') opts = { cmp: opts };\n    var space = opts.space || '';\n    if (typeof space === 'number') space = Array(space+1).join(' ');\n    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;\n    var replacer = opts.replacer || function(key, value) { return value; };\n\n    var cmp = opts.cmp && (function (f) {\n        return function (node) {\n            return function (a, b) {\n                var aobj = { key: a, value: node[a] };\n                var bobj = { key: b, value: node[b] };\n                return f(aobj, bobj);\n            };\n        };\n    })(opts.cmp);\n\n    var seen = [];\n    return (function stringify (parent, key, node, level) {\n        var indent = space ? ('\\n' + new Array(level + 1).join(space)) : '';\n        var colonSeparator = space ? ': ' : ':';\n\n        if (node && node.toJSON && typeof node.toJSON === 'function') {\n            node = node.toJSON();\n        }\n\n        node = replacer.call(parent, key, node);\n\n        if (node === undefined) {\n            return;\n        }\n        if (typeof node !== 'object' || node === null) {\n            return json.stringify(node);\n        }\n        if (isArray(node)) {\n            var out = [];\n            for (var i = 0; i < node.length; i++) {\n                var item = stringify(node, i, node[i], level+1) || json.stringify(null);\n                out.push(indent + space + item);\n            }\n            return '[' + out.join(',') + indent + ']';\n        }\n        else {\n            if (seen.indexOf(node) !== -1) {\n                if (cycles) return json.stringify('__cycle__');\n                throw new TypeError('Converting circular structure to JSON');\n            }\n            else seen.push(node);\n\n            var keys = objectKeys(node).sort(cmp && cmp(node));\n            var out = [];\n            for (var i = 0; i < keys.length; i++) {\n                var key = keys[i];\n                var value = stringify(node, key, node[key], level+1);\n\n                if(!value) continue;\n\n                var keyValue = json.stringify(key)\n                    + colonSeparator\n                    + value;\n                ;\n                out.push(indent + space + keyValue);\n            }\n            seen.splice(seen.indexOf(node), 1);\n            return '{' + out.join(',') + indent + '}';\n        }\n    })({ '': obj }, '', obj, 0);\n};\n\nvar isArray = Array.isArray || function (x) {\n    return {}.toString.call(x) === '[object Array]';\n};\n\nvar objectKeys = Object.keys || function (obj) {\n    var has = Object.prototype.hasOwnProperty || function () { return true };\n    var keys = [];\n    for (var key in obj) {\n        if (has.call(obj, key)) keys.push(key);\n    }\n    return keys;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar hash_utils_1 = require(\"./hash-utils\");\nvar createKeccakHash = require(\"keccak\");\nexports.keccak224 = hash_utils_1.createHashFunction(function () {\n    return createKeccakHash(\"keccak224\");\n});\nexports.keccak256 = hash_utils_1.createHashFunction(function () {\n    return createKeccakHash(\"keccak256\");\n});\nexports.keccak384 = hash_utils_1.createHashFunction(function () {\n    return createKeccakHash(\"keccak384\");\n});\nexports.keccak512 = hash_utils_1.createHashFunction(function () {\n    return createKeccakHash(\"keccak512\");\n});\n//# sourceMappingURL=keccak.js.map","module.exports = require('./lib')(require('./lib/elliptic'))\n","/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param {String} str the string input value\n * @return {Boolean} a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nmodule.exports = function isHexPrefixed(str) {\n  if (typeof str !== 'string') {\n    throw new Error(\"[is-hex-prefixed] value must be type 'string', is currently type \" + (typeof str) + \", while checking isHexPrefixed.\");\n  }\n\n  return str.slice(0, 2) === '0x';\n}\n","var isHexPrefixed = require('is-hex-prefixed');\n\n/**\n * Removes '0x' from a given `String` is present\n * @param {String} str the string value\n * @return {String|Optional} a string by pass if necessary\n */\nmodule.exports = function stripHexPrefix(str) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n\n  return isHexPrefixed(str) ? str.slice(2) : str;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction createHashFunction(hashConstructor) {\n    return function (msg) {\n        var hash = hashConstructor();\n        hash.update(msg);\n        return Buffer.from(hash.digest());\n    };\n}\nexports.createHashFunction = createHashFunction;\n//# sourceMappingURL=hash-utils.js.map","const errors = {\n  IMPOSSIBLE_CASE: 'Impossible case. Please create issue.',\n  TWEAK_ADD:\n    'The tweak was out of range or the resulted private key is invalid',\n  TWEAK_MUL: 'The tweak was out of range or equal to zero',\n  CONTEXT_RANDOMIZE_UNKNOW: 'Unknow error on context randomization',\n  SECKEY_INVALID: 'Private Key is invalid',\n  PUBKEY_PARSE: 'Public Key could not be parsed',\n  PUBKEY_SERIALIZE: 'Public Key serialization error',\n  PUBKEY_COMBINE: 'The sum of the public keys is not valid',\n  SIG_PARSE: 'Signature could not be parsed',\n  SIGN: 'The nonce generation function failed, or the private key was invalid',\n  RECOVER: 'Public key could not be recover',\n  ECDH: 'Scalar was invalid (zero or overflow)'\n}\n\nfunction assert (cond, msg) {\n  if (!cond) throw new Error(msg)\n}\n\nfunction isUint8Array (name, value, length) {\n  assert(value instanceof Uint8Array, `Expected ${name} to be an Uint8Array`)\n\n  if (length !== undefined) {\n    if (Array.isArray(length)) {\n      const numbers = length.join(', ')\n      const msg = `Expected ${name} to be an Uint8Array with length [${numbers}]`\n      assert(length.includes(value.length), msg)\n    } else {\n      const msg = `Expected ${name} to be an Uint8Array with length ${length}`\n      assert(value.length === length, msg)\n    }\n  }\n}\n\nfunction isCompressed (value) {\n  assert(toTypeString(value) === 'Boolean', 'Expected compressed to be a Boolean')\n}\n\nfunction getAssertedOutput (output = (len) => new Uint8Array(len), length) {\n  if (typeof output === 'function') output = output(length)\n  isUint8Array('output', output, length)\n  return output\n}\n\nfunction toTypeString (value) {\n  return Object.prototype.toString.call(value).slice(8, -1)\n}\n\nmodule.exports = (secp256k1) => {\n  return {\n    contextRandomize (seed) {\n      assert(\n        seed === null || seed instanceof Uint8Array,\n        'Expected seed to be an Uint8Array or null'\n      )\n      if (seed !== null) isUint8Array('seed', seed, 32)\n\n      switch (secp256k1.contextRandomize(seed)) {\n        case 1:\n          throw new Error(errors.CONTEXT_RANDOMIZE_UNKNOW)\n      }\n    },\n\n    privateKeyVerify (seckey) {\n      isUint8Array('private key', seckey, 32)\n\n      return secp256k1.privateKeyVerify(seckey) === 0\n    },\n\n    privateKeyNegate (seckey) {\n      isUint8Array('private key', seckey, 32)\n\n      switch (secp256k1.privateKeyNegate(seckey)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    privateKeyTweakAdd (seckey, tweak) {\n      isUint8Array('private key', seckey, 32)\n      isUint8Array('tweak', tweak, 32)\n\n      switch (secp256k1.privateKeyTweakAdd(seckey, tweak)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.TWEAK_ADD)\n      }\n    },\n\n    privateKeyTweakMul (seckey, tweak) {\n      isUint8Array('private key', seckey, 32)\n      isUint8Array('tweak', tweak, 32)\n\n      switch (secp256k1.privateKeyTweakMul(seckey, tweak)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.TWEAK_MUL)\n      }\n    },\n\n    publicKeyVerify (pubkey) {\n      isUint8Array('public key', pubkey, [33, 65])\n\n      return secp256k1.publicKeyVerify(pubkey) === 0\n    },\n\n    publicKeyCreate (seckey, compressed = true, output) {\n      isUint8Array('private key', seckey, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyCreate(output, seckey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SECKEY_INVALID)\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyConvert (pubkey, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyConvert(output, pubkey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyNegate (pubkey, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyNegate(output, pubkey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyCombine (pubkeys, compressed = true, output) {\n      assert(Array.isArray(pubkeys), 'Expected public keys to be an Array')\n      assert(pubkeys.length > 0, 'Expected public keys array will have more than zero items')\n      for (const pubkey of pubkeys) {\n        isUint8Array('public key', pubkey, [33, 65])\n      }\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyCombine(output, pubkeys)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_COMBINE)\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyTweakAdd (pubkey, tweak, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('tweak', tweak, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyTweakAdd(output, pubkey, tweak)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.TWEAK_ADD)\n      }\n    },\n\n    publicKeyTweakMul (pubkey, tweak, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('tweak', tweak, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyTweakMul(output, pubkey, tweak)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.TWEAK_MUL)\n      }\n    },\n\n    signatureNormalize (sig) {\n      isUint8Array('signature', sig, 64)\n\n      switch (secp256k1.signatureNormalize(sig)) {\n        case 0:\n          return sig\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n      }\n    },\n\n    signatureExport (sig, output) {\n      isUint8Array('signature', sig, 64)\n      output = getAssertedOutput(output, 72)\n\n      const obj = { output, outputlen: 72 }\n      switch (secp256k1.signatureExport(obj, sig)) {\n        case 0:\n          return output.slice(0, obj.outputlen)\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    signatureImport (sig, output) {\n      isUint8Array('signature', sig)\n      output = getAssertedOutput(output, 64)\n\n      switch (secp256k1.signatureImport(output, sig)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdsaSign (msg32, seckey, options = {}, output) {\n      isUint8Array('message', msg32, 32)\n      isUint8Array('private key', seckey, 32)\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')\n      if (options.data !== undefined) isUint8Array('options.data', options.data)\n      if (options.noncefn !== undefined) assert(toTypeString(options.noncefn) === 'Function', 'Expected options.noncefn to be a Function')\n      output = getAssertedOutput(output, 64)\n\n      const obj = { signature: output, recid: null }\n      switch (secp256k1.ecdsaSign(obj, msg32, seckey, options.data, options.noncefn)) {\n        case 0:\n          return obj\n        case 1:\n          throw new Error(errors.SIGN)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdsaVerify (sig, msg32, pubkey) {\n      isUint8Array('signature', sig, 64)\n      isUint8Array('message', msg32, 32)\n      isUint8Array('public key', pubkey, [33, 65])\n\n      switch (secp256k1.ecdsaVerify(sig, msg32, pubkey)) {\n        case 0:\n          return true\n        case 3:\n          return false\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_PARSE)\n      }\n    },\n\n    ecdsaRecover (sig, recid, msg32, compressed = true, output) {\n      isUint8Array('signature', sig, 64)\n      assert(\n        toTypeString(recid) === 'Number' &&\n          recid >= 0 &&\n          recid <= 3,\n        'Expected recovery id to be a Number within interval [0, 3]'\n      )\n      isUint8Array('message', msg32, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.ecdsaRecover(output, sig, recid, msg32)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.RECOVER)\n        case 3:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdh (pubkey, seckey, options = {}, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('private key', seckey, 32)\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')\n      if (options.data !== undefined) isUint8Array('options.data', options.data)\n      if (options.hashfn !== undefined) {\n        assert(toTypeString(options.hashfn) === 'Function', 'Expected options.hashfn to be a Function')\n        if (options.xbuf !== undefined) isUint8Array('options.xbuf', options.xbuf, 32)\n        if (options.ybuf !== undefined) isUint8Array('options.ybuf', options.ybuf, 32)\n        isUint8Array('output', output)\n      } else {\n        output = getAssertedOutput(output, 32)\n      }\n\n      switch (secp256k1.ecdh(output, pubkey, seckey, options.data, options.hashfn, options.xbuf, options.ybuf)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.ECDH)\n      }\n    }\n  }\n}\n","const EC = require('elliptic').ec\n\nconst ec = new EC('secp256k1')\nconst ecparams = ec.curve\n\n// Hack, we can not use bn.js@5, while elliptic uses bn.js@4\n// See https://github.com/indutny/elliptic/issues/191#issuecomment-569888758\nconst BN = ecparams.n.constructor\n\nfunction loadCompressedPublicKey (first, xbuf) {\n  let x = new BN(xbuf)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0) return null\n  x = x.toRed(ecparams.red)\n\n  // compute corresponding Y\n  let y = x.redSqr().redIMul(x).redIAdd(ecparams.b).redSqrt()\n  if ((first === 0x03) !== y.isOdd()) y = y.redNeg()\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadUncompressedPublicKey (first, xbuf, ybuf) {\n  let x = new BN(xbuf)\n  let y = new BN(ybuf)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0 || y.cmp(ecparams.p) >= 0) return null\n\n  x = x.toRed(ecparams.red)\n  y = y.toRed(ecparams.red)\n\n  // is odd flag\n  if ((first === 0x06 || first === 0x07) && y.isOdd() !== (first === 0x07)) return null\n\n  // x*x*x + b = y*y\n  const x3 = x.redSqr().redIMul(x)\n  if (!y.redSqr().redISub(x3.redIAdd(ecparams.b)).isZero()) return null\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadPublicKey (pubkey) {\n  // length should be validated in interface\n  const first = pubkey[0]\n  switch (first) {\n    case 0x02:\n    case 0x03:\n      if (pubkey.length !== 33) return null\n      return loadCompressedPublicKey(first, pubkey.subarray(1, 33))\n    case 0x04:\n    case 0x06:\n    case 0x07:\n      if (pubkey.length !== 65) return null\n      return loadUncompressedPublicKey(first, pubkey.subarray(1, 33), pubkey.subarray(33, 65))\n    default:\n      return null\n  }\n}\n\nfunction savePublicKey (output, point) {\n  const pubkey = point.encode(null, output.length === 33)\n  // Loop should be faster because we do not need create extra Uint8Array\n  // output.set(new Uint8Array(pubkey))\n  for (let i = 0; i < output.length; ++i) output[i] = pubkey[i]\n}\n\nmodule.exports = {\n  contextRandomize () {\n    return 0\n  },\n\n  privateKeyVerify (seckey) {\n    const bn = new BN(seckey)\n    return bn.cmp(ecparams.n) < 0 && !bn.isZero() ? 0 : 1\n  },\n\n  privateKeyNegate (seckey) {\n    const bn = new BN(seckey)\n    const negate = ecparams.n.sub(bn).umod(ecparams.n).toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(negate)\n    return 0\n  },\n\n  privateKeyTweakAdd (seckey, tweak) {\n    const bn = new BN(tweak)\n    if (bn.cmp(ecparams.n) >= 0) return 1\n\n    bn.iadd(new BN(seckey))\n    if (bn.cmp(ecparams.n) >= 0) bn.isub(ecparams.n)\n    if (bn.isZero()) return 1\n\n    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(tweaked)\n\n    return 0\n  },\n\n  privateKeyTweakMul (seckey, tweak) {\n    let bn = new BN(tweak)\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1\n\n    bn.imul(new BN(seckey))\n    if (bn.cmp(ecparams.n) >= 0) bn = bn.umod(ecparams.n)\n\n    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(tweaked)\n\n    return 0\n  },\n\n  publicKeyVerify (pubkey) {\n    const pair = loadPublicKey(pubkey)\n    return pair === null ? 1 : 0\n  },\n\n  publicKeyCreate (output, seckey) {\n    const bn = new BN(seckey)\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1\n\n    const point = ec.keyFromPrivate(seckey).getPublic()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyConvert (output, pubkey) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const point = pair.getPublic()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyNegate (output, pubkey) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const point = pair.getPublic()\n    point.y = point.y.redNeg()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyCombine (output, pubkeys) {\n    const pairs = new Array(pubkeys.length)\n    for (let i = 0; i < pubkeys.length; ++i) {\n      pairs[i] = loadPublicKey(pubkeys[i])\n      if (pairs[i] === null) return 1\n    }\n\n    let point = pairs[0].getPublic()\n    for (let i = 1; i < pairs.length; ++i) point = point.add(pairs[i].pub)\n    if (point.isInfinity()) return 2\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyTweakAdd (output, pubkey, tweak) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    tweak = new BN(tweak)\n    if (tweak.cmp(ecparams.n) >= 0) return 2\n\n    const point = pair.getPublic().add(ecparams.g.mul(tweak))\n    if (point.isInfinity()) return 2\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyTweakMul (output, pubkey, tweak) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    tweak = new BN(tweak)\n    if (tweak.cmp(ecparams.n) >= 0 || tweak.isZero()) return 2\n\n    const point = pair.getPublic().mul(tweak)\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  signatureNormalize (sig) {\n    const r = new BN(sig.subarray(0, 32))\n    const s = new BN(sig.subarray(32, 64))\n    if (r.cmp(ecparams.n) >= 0 || s.cmp(ecparams.n) >= 0) return 1\n\n    if (s.cmp(ec.nh) === 1) {\n      sig.set(ecparams.n.sub(s).toArrayLike(Uint8Array, 'be', 32), 32)\n    }\n\n    return 0\n  },\n\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureExport (obj, sig) {\n    const sigR = sig.subarray(0, 32)\n    const sigS = sig.subarray(32, 64)\n    if (new BN(sigR).cmp(ecparams.n) >= 0) return 1\n    if (new BN(sigS).cmp(ecparams.n) >= 0) return 1\n\n    const { output } = obj\n\n    // Prepare R\n    let r = output.subarray(4, 4 + 33)\n    r[0] = 0x00\n    r.set(sigR, 1)\n\n    let lenR = 33\n    let posR = 0\n    for (; lenR > 1 && r[posR] === 0x00 && !(r[posR + 1] & 0x80); --lenR, ++posR);\n\n    r = r.subarray(posR)\n    if (r[0] & 0x80) return 1\n    if (lenR > 1 && (r[0] === 0x00) && !(r[1] & 0x80)) return 1\n\n    // Prepare S\n    let s = output.subarray(6 + 33, 6 + 33 + 33)\n    s[0] = 0x00\n    s.set(sigS, 1)\n\n    let lenS = 33\n    let posS = 0\n    for (; lenS > 1 && s[posS] === 0x00 && !(s[posS + 1] & 0x80); --lenS, ++posS);\n\n    s = s.subarray(posS)\n    if (s[0] & 0x80) return 1\n    if (lenS > 1 && (s[0] === 0x00) && !(s[1] & 0x80)) return 1\n\n    // Set output length for return\n    obj.outputlen = 6 + lenR + lenS\n\n    // Output in specified format\n    // 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n    output[0] = 0x30\n    output[1] = obj.outputlen - 2\n    output[2] = 0x02\n    output[3] = r.length\n    output.set(r, 4)\n    output[4 + lenR] = 0x02\n    output[5 + lenR] = s.length\n    output.set(s, 6 + lenR)\n\n    return 0\n  },\n\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureImport (output, sig) {\n    if (sig.length < 8) return 1\n    if (sig.length > 72) return 1\n    if (sig[0] !== 0x30) return 1\n    if (sig[1] !== sig.length - 2) return 1\n    if (sig[2] !== 0x02) return 1\n\n    const lenR = sig[3]\n    if (lenR === 0) return 1\n    if (5 + lenR >= sig.length) return 1\n    if (sig[4 + lenR] !== 0x02) return 1\n\n    const lenS = sig[5 + lenR]\n    if (lenS === 0) return 1\n    if ((6 + lenR + lenS) !== sig.length) return 1\n\n    if (sig[4] & 0x80) return 1\n    if (lenR > 1 && (sig[4] === 0x00) && !(sig[5] & 0x80)) return 1\n\n    if (sig[lenR + 6] & 0x80) return 1\n    if (lenS > 1 && (sig[lenR + 6] === 0x00) && !(sig[lenR + 7] & 0x80)) return 1\n\n    let sigR = sig.subarray(4, 4 + lenR)\n    if (sigR.length === 33 && sigR[0] === 0x00) sigR = sigR.subarray(1)\n    if (sigR.length > 32) return 1\n\n    let sigS = sig.subarray(6 + lenR)\n    if (sigS.length === 33 && sigS[0] === 0x00) sigS = sigS.slice(1)\n    if (sigS.length > 32) throw new Error('S length is too long')\n\n    let r = new BN(sigR)\n    if (r.cmp(ecparams.n) >= 0) r = new BN(0)\n\n    let s = new BN(sig.subarray(6 + lenR))\n    if (s.cmp(ecparams.n) >= 0) s = new BN(0)\n\n    output.set(r.toArrayLike(Uint8Array, 'be', 32), 0)\n    output.set(s.toArrayLike(Uint8Array, 'be', 32), 32)\n\n    return 0\n  },\n\n  ecdsaSign (obj, message, seckey, data, noncefn) {\n    if (noncefn) {\n      const _noncefn = noncefn\n      noncefn = (counter) => {\n        const nonce = _noncefn(message, seckey, null, data, counter)\n\n        const isValid = nonce instanceof Uint8Array && nonce.length === 32\n        if (!isValid) throw new Error('This is the way')\n\n        return new BN(nonce)\n      }\n    }\n\n    const d = new BN(seckey)\n    if (d.cmp(ecparams.n) >= 0 || d.isZero()) return 1\n\n    let sig\n    try {\n      sig = ec.sign(message, seckey, { canonical: true, k: noncefn, pers: data })\n    } catch (err) {\n      return 1\n    }\n\n    obj.signature.set(sig.r.toArrayLike(Uint8Array, 'be', 32), 0)\n    obj.signature.set(sig.s.toArrayLike(Uint8Array, 'be', 32), 32)\n    obj.recid = sig.recoveryParam\n\n    return 0\n  },\n\n  ecdsaVerify (sig, msg32, pubkey) {\n    const sigObj = { r: sig.subarray(0, 32), s: sig.subarray(32, 64) }\n\n    const sigr = new BN(sigObj.r)\n    const sigs = new BN(sigObj.s)\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1\n    if (sigs.cmp(ec.nh) === 1 || sigr.isZero() || sigs.isZero()) return 3\n\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 2\n\n    const point = pair.getPublic()\n    const isValid = ec.verify(msg32, sigObj, point)\n    return isValid ? 0 : 3\n  },\n\n  ecdsaRecover (output, sig, recid, msg32) {\n    const sigObj = { r: sig.slice(0, 32), s: sig.slice(32, 64) }\n\n    const sigr = new BN(sigObj.r)\n    const sigs = new BN(sigObj.s)\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1\n\n    if (sigr.isZero() || sigs.isZero()) return 2\n\n    // Can throw `throw new Error('Unable to find sencond key candinate');`\n    let point\n    try {\n      point = ec.recoverPubKey(msg32, sigObj, recid)\n    } catch (err) {\n      return 2\n    }\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  ecdh (output, pubkey, seckey, data, hashfn, xbuf, ybuf) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const scalar = new BN(seckey)\n    if (scalar.cmp(ecparams.n) >= 0 || scalar.isZero()) return 2\n\n    const point = pair.getPublic().mul(scalar)\n\n    if (hashfn === undefined) {\n      const data = point.encode(null, true)\n      const sha256 = ec.hash().update(data).digest()\n      for (let i = 0; i < 32; ++i) output[i] = sha256[i]\n    } else {\n      if (!xbuf) xbuf = new Uint8Array(32)\n      const x = point.getX().toArray('be', 32)\n      for (let i = 0; i < 32; ++i) xbuf[i] = x[i]\n\n      if (!ybuf) ybuf = new Uint8Array(32)\n      const y = point.getY().toArray('be', 32)\n      for (let i = 0; i < 32; ++i) ybuf[i] = y[i]\n\n      const hash = hashfn(xbuf, ybuf, data)\n\n      const isValid = hash instanceof Uint8Array && hash.length === output.length\n      if (!isValid) return 2\n\n      output.set(hash)\n    }\n\n    return 0\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar randombytes = require(\"randombytes\");\nfunction getRandomBytes(bytes) {\n    return new Promise(function (resolve, reject) {\n        randombytes(bytes, function (err, resp) {\n            if (err) {\n                reject(err);\n                return;\n            }\n            resolve(resp);\n        });\n    });\n}\nexports.getRandomBytes = getRandomBytes;\nfunction getRandomBytesSync(bytes) {\n    return randombytes(bytes);\n}\nexports.getRandomBytesSync = getRandomBytesSync;\n//# sourceMappingURL=random.js.map","exports.parse = require('./lib/parse');\nexports.stringify = require('./lib/stringify');\n","var at, // The index of the current character\n    ch, // The current character\n    escapee = {\n        '\"':  '\"',\n        '\\\\': '\\\\',\n        '/':  '/',\n        b:    '\\b',\n        f:    '\\f',\n        n:    '\\n',\n        r:    '\\r',\n        t:    '\\t'\n    },\n    text,\n\n    error = function (m) {\n        // Call error when something is wrong.\n        throw {\n            name:    'SyntaxError',\n            message: m,\n            at:      at,\n            text:    text\n        };\n    },\n    \n    next = function (c) {\n        // If a c parameter is provided, verify that it matches the current character.\n        if (c && c !== ch) {\n            error(\"Expected '\" + c + \"' instead of '\" + ch + \"'\");\n        }\n        \n        // Get the next character. When there are no more characters,\n        // return the empty string.\n        \n        ch = text.charAt(at);\n        at += 1;\n        return ch;\n    },\n    \n    number = function () {\n        // Parse a number value.\n        var number,\n            string = '';\n        \n        if (ch === '-') {\n            string = '-';\n            next('-');\n        }\n        while (ch >= '0' && ch <= '9') {\n            string += ch;\n            next();\n        }\n        if (ch === '.') {\n            string += '.';\n            while (next() && ch >= '0' && ch <= '9') {\n                string += ch;\n            }\n        }\n        if (ch === 'e' || ch === 'E') {\n            string += ch;\n            next();\n            if (ch === '-' || ch === '+') {\n                string += ch;\n                next();\n            }\n            while (ch >= '0' && ch <= '9') {\n                string += ch;\n                next();\n            }\n        }\n        number = +string;\n        if (!isFinite(number)) {\n            error(\"Bad number\");\n        } else {\n            return number;\n        }\n    },\n    \n    string = function () {\n        // Parse a string value.\n        var hex,\n            i,\n            string = '',\n            uffff;\n        \n        // When parsing for string values, we must look for \" and \\ characters.\n        if (ch === '\"') {\n            while (next()) {\n                if (ch === '\"') {\n                    next();\n                    return string;\n                } else if (ch === '\\\\') {\n                    next();\n                    if (ch === 'u') {\n                        uffff = 0;\n                        for (i = 0; i < 4; i += 1) {\n                            hex = parseInt(next(), 16);\n                            if (!isFinite(hex)) {\n                                break;\n                            }\n                            uffff = uffff * 16 + hex;\n                        }\n                        string += String.fromCharCode(uffff);\n                    } else if (typeof escapee[ch] === 'string') {\n                        string += escapee[ch];\n                    } else {\n                        break;\n                    }\n                } else {\n                    string += ch;\n                }\n            }\n        }\n        error(\"Bad string\");\n    },\n\n    white = function () {\n\n// Skip whitespace.\n\n        while (ch && ch <= ' ') {\n            next();\n        }\n    },\n\n    word = function () {\n\n// true, false, or null.\n\n        switch (ch) {\n        case 't':\n            next('t');\n            next('r');\n            next('u');\n            next('e');\n            return true;\n        case 'f':\n            next('f');\n            next('a');\n            next('l');\n            next('s');\n            next('e');\n            return false;\n        case 'n':\n            next('n');\n            next('u');\n            next('l');\n            next('l');\n            return null;\n        }\n        error(\"Unexpected '\" + ch + \"'\");\n    },\n\n    value,  // Place holder for the value function.\n\n    array = function () {\n\n// Parse an array value.\n\n        var array = [];\n\n        if (ch === '[') {\n            next('[');\n            white();\n            if (ch === ']') {\n                next(']');\n                return array;   // empty array\n            }\n            while (ch) {\n                array.push(value());\n                white();\n                if (ch === ']') {\n                    next(']');\n                    return array;\n                }\n                next(',');\n                white();\n            }\n        }\n        error(\"Bad array\");\n    },\n\n    object = function () {\n\n// Parse an object value.\n\n        var key,\n            object = {};\n\n        if (ch === '{') {\n            next('{');\n            white();\n            if (ch === '}') {\n                next('}');\n                return object;   // empty object\n            }\n            while (ch) {\n                key = string();\n                white();\n                next(':');\n                if (Object.hasOwnProperty.call(object, key)) {\n                    error('Duplicate key \"' + key + '\"');\n                }\n                object[key] = value();\n                white();\n                if (ch === '}') {\n                    next('}');\n                    return object;\n                }\n                next(',');\n                white();\n            }\n        }\n        error(\"Bad object\");\n    };\n\nvalue = function () {\n\n// Parse a JSON value. It could be an object, an array, a string, a number,\n// or a word.\n\n    white();\n    switch (ch) {\n    case '{':\n        return object();\n    case '[':\n        return array();\n    case '\"':\n        return string();\n    case '-':\n        return number();\n    default:\n        return ch >= '0' && ch <= '9' ? number() : word();\n    }\n};\n\n// Return the json_parse function. It will have access to all of the above\n// functions and variables.\n\nmodule.exports = function (source, reviver) {\n    var result;\n    \n    text = source;\n    at = 0;\n    ch = ' ';\n    result = value();\n    white();\n    if (ch) {\n        error(\"Syntax error\");\n    }\n\n    // If there is a reviver function, we recursively walk the new structure,\n    // passing each name/value pair to the reviver function for possible\n    // transformation, starting with a temporary root object that holds the result\n    // in an empty key. If there is not a reviver function, we simply return the\n    // result.\n\n    return typeof reviver === 'function' ? (function walk(holder, key) {\n        var k, v, value = holder[key];\n        if (value && typeof value === 'object') {\n            for (k in value) {\n                if (Object.prototype.hasOwnProperty.call(value, k)) {\n                    v = walk(value, k);\n                    if (v !== undefined) {\n                        value[k] = v;\n                    } else {\n                        delete value[k];\n                    }\n                }\n            }\n        }\n        return reviver.call(holder, key, value);\n    }({'': result}, '')) : result;\n};\n","var cx = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n    escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n    gap,\n    indent,\n    meta = {    // table of character substitutions\n        '\\b': '\\\\b',\n        '\\t': '\\\\t',\n        '\\n': '\\\\n',\n        '\\f': '\\\\f',\n        '\\r': '\\\\r',\n        '\"' : '\\\\\"',\n        '\\\\': '\\\\\\\\'\n    },\n    rep;\n\nfunction quote(string) {\n    // If the string contains no control characters, no quote characters, and no\n    // backslash characters, then we can safely slap some quotes around it.\n    // Otherwise we must also replace the offending characters with safe escape\n    // sequences.\n    \n    escapable.lastIndex = 0;\n    return escapable.test(string) ? '\"' + string.replace(escapable, function (a) {\n        var c = meta[a];\n        return typeof c === 'string' ? c :\n            '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n    }) + '\"' : '\"' + string + '\"';\n}\n\nfunction str(key, holder) {\n    // Produce a string from holder[key].\n    var i,          // The loop counter.\n        k,          // The member key.\n        v,          // The member value.\n        length,\n        mind = gap,\n        partial,\n        value = holder[key];\n    \n    // If the value has a toJSON method, call it to obtain a replacement value.\n    if (value && typeof value === 'object' &&\n            typeof value.toJSON === 'function') {\n        value = value.toJSON(key);\n    }\n    \n    // If we were called with a replacer function, then call the replacer to\n    // obtain a replacement value.\n    if (typeof rep === 'function') {\n        value = rep.call(holder, key, value);\n    }\n    \n    // What happens next depends on the value's type.\n    switch (typeof value) {\n        case 'string':\n            return quote(value);\n        \n        case 'number':\n            // JSON numbers must be finite. Encode non-finite numbers as null.\n            return isFinite(value) ? String(value) : 'null';\n        \n        case 'boolean':\n        case 'null':\n            // If the value is a boolean or null, convert it to a string. Note:\n            // typeof null does not produce 'null'. The case is included here in\n            // the remote chance that this gets fixed someday.\n            return String(value);\n            \n        case 'object':\n            if (!value) return 'null';\n            gap += indent;\n            partial = [];\n            \n            // Array.isArray\n            if (Object.prototype.toString.apply(value) === '[object Array]') {\n                length = value.length;\n                for (i = 0; i < length; i += 1) {\n                    partial[i] = str(i, value) || 'null';\n                }\n                \n                // Join all of the elements together, separated with commas, and\n                // wrap them in brackets.\n                v = partial.length === 0 ? '[]' : gap ?\n                    '[\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + ']' :\n                    '[' + partial.join(',') + ']';\n                gap = mind;\n                return v;\n            }\n            \n            // If the replacer is an array, use it to select the members to be\n            // stringified.\n            if (rep && typeof rep === 'object') {\n                length = rep.length;\n                for (i = 0; i < length; i += 1) {\n                    k = rep[i];\n                    if (typeof k === 'string') {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            }\n            else {\n                // Otherwise, iterate through all of the keys in the object.\n                for (k in value) {\n                    if (Object.prototype.hasOwnProperty.call(value, k)) {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            }\n            \n        // Join all of the member texts together, separated with commas,\n        // and wrap them in braces.\n\n        v = partial.length === 0 ? '{}' : gap ?\n            '{\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + '}' :\n            '{' + partial.join(',') + '}';\n        gap = mind;\n        return v;\n    }\n}\n\nmodule.exports = function (value, replacer, space) {\n    var i;\n    gap = '';\n    indent = '';\n    \n    // If the space parameter is a number, make an indent string containing that\n    // many spaces.\n    if (typeof space === 'number') {\n        for (i = 0; i < space; i += 1) {\n            indent += ' ';\n        }\n    }\n    // If the space parameter is a string, it will be used as the indent string.\n    else if (typeof space === 'string') {\n        indent = space;\n    }\n\n    // If there is a replacer, it must be a function or an array.\n    // Otherwise, throw an error.\n    rep = replacer;\n    if (replacer && typeof replacer !== 'function'\n    && (typeof replacer !== 'object' || typeof replacer.length !== 'number')) {\n        throw new Error('JSON.stringify');\n    }\n    \n    // Make a fake root object containing our value under the key of ''.\n    // Return the result of stringifying the value.\n    return str('', {'': value});\n};\n"],"sourceRoot":""}